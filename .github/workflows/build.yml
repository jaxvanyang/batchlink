name: Build

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    # environment: release
    # permissions:
    #   contents: write
    #   id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: pdm-project/setup-pdm@v3
      - name: Build
        run: pdm build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
          if-no-files-found: error
      # - name: Release
      #   uses: softprops/action-gh-release@v2
      #   if: startswith(github.ref, 'refs/tags/v')
      #   with:
      #     files: dist/*
      #     generate_release_notes: true
      - name: Publish to PyPI
        if: startswith(github.ref, 'refs/tags/v')
        run: pdm publish --no-build
  pyinstaller:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
      - name: Package using pyinstaller
        run: pyinstaller -Fn batchlink src/batchlink/cli.py
      - name: Rename for Linux
        if: matrix.os == 'ubuntu-latest'
        run: mv dist/batchlink dist/batchlink-linux64
      - name: Rename for Windows
        if: matrix.os == 'windows-latest'
        run: mv dist/batchlink.exe dist/batchlink-win64.exe
      - name: Rename for macOS
        if: startsWith(matrix.os, 'macos')
        run: mv dist/batchlink dist/batchlink-macos-$(uname -m)
      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist/*
          if-no-files-found: error
